{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","assets/images/icons/social-google.svg","ui-component/cards/AuthFooter.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login3.js"],"names":["AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","FirebaseLogin","others","useTheme","scriptedRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","useState","checked","setChecked","navigate","useNavigate","freighterHandler","a","funcAddresses","fsc","network","pk","xdrToken","window","localStorage","setItem","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Grid","container","spacing","item","AnimateButton","Button","disableElevation","fullWidth","onClick","size","color","grey","borderColor","Box","mr","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Stack","FormControlLabel","control","Checkbox","textDecoration","mt","Login","to","Logo","secondary","main","gutterBottom","fontSize","textAlign","AuthLogin"],"mappings":"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","file":"static/js/6.2459b5a5.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport Google from 'assets/images/icons/social-google.svg';\n\nimport * as fsc from 'utils/freighter-stellar';\n\n// ============================|| FIREBASE - LOGIN ||============================ //\n\nconst FirebaseLogin = ({ ...others }) => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const [checked, setChecked] = useState(true);\n    const navigate = useNavigate();\n\n    const freighterHandler = async () => {\n        const funcAddresses = ['9d64bd82134a1c141501dc16dca992446ecdc1812c1d75e8aab53443f879bf87'];\n        const network = await fsc.retrieveNetwork();\n        const pk = await fsc.retrievePublicKey();\n        const xdrToken = await fsc.generateXDRToken(funcAddresses, pk);\n        if (pk && network) {\n            window.localStorage.setItem(\"userPublicKey\", pk);\n            if (xdrToken) {\n                window.localStorage.setItem(\"xdrToken\", xdrToken);\n            }\n            navigate(\"/token-royale\");\n        }\n    };\n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth\n                            onClick={freighterHandler}\n                            size=\"large\"\n                            variant=\"outlined\"\n                            sx={{\n                                color: 'grey.700',\n                                backgroundColor: theme.palette.grey[50],\n                                borderColor: theme.palette.grey[100]\n                            }}\n                        >\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\n                            </Box>\n                            Sign in with Freighter\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n\n                        <Button\n                            variant=\"outlined\"\n                            sx={{\n                                cursor: 'unset',\n                                m: 2,\n                                py: 0.5,\n                                px: 7,\n                                borderColor: `${theme.palette.grey[100]} !important`,\n                                color: `${theme.palette.grey[900]}!important`,\n                                fontWeight: 500,\n                                borderRadius: `${customization.borderRadius}px`\n                            }}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign in\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default FirebaseLogin;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthLogin from '../auth-forms/AuthLogin';\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\n// assets\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthLogin />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/pages/register/register3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don&apos;t have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}