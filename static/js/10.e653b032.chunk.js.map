{"version":3,"sources":["utils/freighter-stellar.js","ui-component/cards/Skeleton/EarningCard.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/TotalOrderLineChartCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","views/dashboard/Default/index.js"],"names":["retrievePublicKey","a","publicKey","error","freighterApi","getPublicKey","console","retrieveNetwork","network","getNetwork","userSignTransaction","xdr","signedTransaction","signTransaction","generateXDRToken","txFunctionHashes","log","tempAcct","StellarSdk","Account","testnet","Server","fetchBaseFee","fee","txBuilder","TransactionBuilder","networkPassphrase","Networks","TESTNET","hash","addOperation","Operation","manageData","name","value","tx","setTimeout","build","txHashed","toEnvelope","toXDR","txSigned","alert","getAssets","userPublicKey","server","loadAccount","account","balances","map","balance","asset","asset_code","type","asset_type","getFuncBalance","xdrToken","turretURL","headers","axios","get","response","data","EarningCard","Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","sx","my","CardWrapper","styled","MainCard","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","isLoading","useTheme","useState","anchorEl","setAnchorEl","handleClose","border","Box","p","Avatar","typography","commonAvatar","largeAvatar","mt","src","EarningIcon","alt","mediumAvatar","zIndex","onClick","event","currentTarget","fontSize","Menu","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","mr","alignItems","Typography","fontWeight","mb","PopularCard","spacing","gridSpacing","xs","zeroMinWidth","display","pt","alignContent","primary","cursor","success","light","ml","Divider","orange","marginLeft","CardActions","Button","size","disableElevation","TotalIncomeCard","List","py","ListItem","disableGutters","ListItemAvatar","ListItemText","TotalIncomeDarkCard","flagsCaptured","warning","TotalIncomeLightCard","funcBalance","grey","Dashboard","setLoading","setAssets","setAccount","setFuncBalance","setXDRToken","useEffect","getData","pk","localStorage","getItem","fsc","assets","then","res","catch","lg","md","sm"],"mappings":"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","file":"static/js/10.e653b032.chunk.js","sourcesContent":["import freighterApi from '@stellar/freighter-api';\nimport StellarSdk from 'stellar-sdk';\nimport StellarBase from 'stellar-base';\nimport axios from 'axios';\n\nconst checkFreighter = async () => {\n    if (freighterApi.isConnected()) {\n        return true;\n    }\n    return false;\n};\n\nconst retrievePublicKey = async () => {\n    let publicKey = '';\n    let error = '';\n    try {\n        publicKey = await freighterApi.getPublicKey();\n    } catch (e) {\n        error = e;\n    }\n    if (error) {\n        console.error(error);\n        return false;\n    }\n    return publicKey;\n};\n\nconst retrieveNetwork = async () => {\n    let network = '';\n    let error = '';\n    try {\n        network = await freighterApi.getNetwork();\n    } catch (e) {\n        error = e;\n    }\n    if (error) {\n        console.error(error);\n        return false;\n    }\n    if (network !== 'TESTNET') {\n        return false;\n    }\n    return true;\n};\n\nconst checkBasicReq = async () => {\n    const userPublicKey = await retrievePublicKey();\n    const network = await retrieveNetwork();\n    const wallet = await checkFreighter();\n\n    return userPublicKey && network && wallet;\n};\n\nconst userSignTransaction = async (xdr, network) => {\n    let signedTransaction = '';\n    let error = '';\n    try {\n        signedTransaction = await freighterApi.signTransaction(xdr, network);\n    } catch (e) {\n        error = e;\n    }\n\n    if (error) {\n        return error;\n    }\n    return signedTransaction;\n};\n\nconst payment = async (paymentAmt, dest, publicKey) => {\n    const server = new StellarSdk.Server('https://horizon-testnet.stellar.org');\n    const paymentToDest = {\n        destination: dest,\n        asset: StellarSdk.Asset.native(),\n        amount: paymentAmt\n    };\n    const txOptions = {\n        fee: await server.fetchBaseFee(),\n        networkPassphrase: 'Test SDF Network ; September 2015'\n    };\n    const accountA = await server.loadAccount(publicKey);\n    const transaction = new StellarSdk.TransactionBuilder(accountA, txOptions)\n        .addOperation(StellarSdk.Operation.payment(paymentToDest))\n        .setTimeout(StellarBase.TimeoutInfinite)\n        .build();\n    const transactionString = transaction.toEnvelope().toXDR('base64');\n    const xdrPay = await userSignTransaction(transactionString, 'TESTNET');\n    return xdrPay;\n};\n\nconst topUp = async (xdrPay, turretBaseUrl, publicKey) => {\n    const body = {\n        txFunctionFee: xdrPay\n    };\n    const reqUrl = `${turretBaseUrl}tx-fees/${publicKey}`;\n    const res = await axios.post(reqUrl, body);\n    return res.data;\n};\n\nconst generateXDRToken = async (txFunctionHashes, publicKey) => {\n    console.log('Generating XDR Token...');\n    var txSigned = '';\n    try {\n        // setup a fake account with a -1 seq number.\n        // This ensures a zero seq number when the transaction is built (TransactionBuilder increments once).\n        const tempAcct = new StellarSdk.Account(publicKey, '-1');\n        const testnet = new StellarSdk.Server('https://horizon-testnet.stellar.org')\n        const fee = await testnet.fetchBaseFee();\n        const txBuilder = new StellarSdk.TransactionBuilder(tempAcct, {fee, networkPassphrase: StellarSdk.Networks.TESTNET});\n        // add the manage data operations to specify the allowed txHashes to be run for this user\n        for (const hash of txFunctionHashes) {\n            txBuilder.addOperation(StellarSdk.Operation.manageData({\n                name: \"txFunctionHash\",\n                value: hash\n            }));\n        }\n        // set TTL on the token for 1 hour\n        const tx = txBuilder.setTimeout(24*60*60).build();\n        // sign transaction\n        const txHashed = tx.toEnvelope().toXDR('base64')\n        const txSigned = await userSignTransaction(txHashed, 'TESTNET');\n        return txSigned;\n    } catch (e) {\n        alert(e);\n    }\n    return false;\n};\n\nconst runFunc = async(\n    publicKey, \n    xdrToken, \n    turretURL,\n    funcHash\n    ) => {\n        console.log('Running function...')\n        const body = {\n            source: publicKey\n        }\n        const headers = {\n            \"Authorization\": \"Bearer \" + xdrToken\n        }\n        const response = await axios.post(turretURL + 'tx-functions/' + funcHash, body, {headers: headers})\n        return response.data\n};\n\nconst turretSign = async(xdr, signer, signature) => {\n    console.log('Adding turret signature to transaction...')\n    const transaction = new StellarSdk.Transaction(xdr, StellarSdk.Networks.TESTNET)\n    transaction.addSignature(signer, signature)\n    return transaction.toXDR()\n};\n\nconst sendTransaction = async(signedTxn) => {\n    console.log('Sending transaction...')\n    const serverUrl = \"https://horizon-testnet.stellar.org\"\n    const server = new StellarSdk.Server(serverUrl)\n    var txn = new StellarSdk.Transaction(signedTxn, StellarSdk.Networks.TESTNET)\n    const txnString = txn.toEnvelope().toXDR('base64')\n    const txnSignedComplete = await userSignTransaction(txnString, \"TESTNET\")\n    const txnToSubmit = StellarSdk.TransactionBuilder.fromXDR(\n        txnSignedComplete,\n        serverUrl\n    );\n    const response = await server.submitTransaction(txnToSubmit);\n    return response\n};\n\nconst getAssets = async (userPublicKey) => {\n    const server = new StellarSdk.Server('https://horizon-testnet.stellar.org')\n    const account = await server.loadAccount(userPublicKey);\n    const balances = account.balances.map( balance => ({\n        asset: balance.asset_code,\n        type: balance.asset_type,\n        balance: balance.balance\n    }))\n\n    return balances\n}\n\nconst getFuncBalance = async (\n    xdrToken, \n    turretURL\n    ) => {\n        const headers = {\n            \"Authorization\": \"Bearer \" + xdrToken\n        }\n        const response = await axios.get(turretURL + 'tx-fees/', {headers: headers})\n        return response.data.balance\n}\n\nexport { \n    checkFreighter,\n    retrievePublicKey,\n    retrieveNetwork,\n    checkBasicReq,\n    userSignTransaction,\n    payment,\n    topUp,\n    generateXDRToken,\n    runFunc,\n    turretSign,\n    sendTransaction,\n    getAssets,\n    getFuncBalance\n};\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ==============================|| SKELETON - EARNING CARD ||============================== //\n\nconst EarningCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Grid container justifyContent=\"space-between\">\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" height={30} />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n);\n\nexport default EarningCard;\n","export default __webpack_public_path__ + \"static/media/earning.b019e86a.svg\";","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport EarningIcon from 'assets/images/icons/earning.svg';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst EarningCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.largeAvatar,\n                                                backgroundColor: theme.palette.secondary[800],\n                                                mt: 1\n                                            }}\n                                        >\n                                            <img src={EarningIcon} alt=\"Notification\" />\n                                        </Avatar>\n                                    </Grid>\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.mediumAvatar,\n                                                backgroundColor: theme.palette.secondary.dark,\n                                                color: theme.palette.secondary[200],\n                                                zIndex: 1\n                                            }}\n                                            aria-controls=\"menu-earning-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        >\n                                            <MoreHorizIcon fontSize=\"inherit\" />\n                                        </Avatar>\n                                        <Menu\n                                            id=\"menu-earning-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}>\n                                                <GetAppTwoToneIcon sx={{ mr: 1.75 }} /> Import Card\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <FileCopyTwoToneIcon sx={{ mr: 1.75 }} /> Copy Data\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <PictureAsPdfTwoToneIcon sx={{ mr: 1.75 }} /> Export\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <ArchiveTwoToneIcon sx={{ mr: 1.75 }} /> Archive File\n                                            </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                            10000 XLM\n                                        </Typography>\n                                    </Grid>\n                                    {/* <Grid item>\n                                        <Avatar\n                                            sx={{\n                                                cursor: 'pointer',\n                                                ...theme.typography.smallAvatar,\n                                                backgroundColor: theme.palette.secondary[200],\n                                                color: theme.palette.secondary.dark\n                                            }}\n                                        >\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\n                                        </Avatar>\n                                    </Grid> */}\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ mb: 1.25 }}>\n                                <Typography\n                                    sx={{\n                                        fontSize: '1rem',\n                                        fontWeight: 500,\n                                        color: theme.palette.secondary[200]\n                                    }}\n                                >\n                                    Reward Pool\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nEarningCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default EarningCard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\n\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\n\nconst PopularCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                        <Grid item xs zeroMinWidth>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton variant=\"rectangular\" height={150} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\n        </CardContent>\n    </Card>\n);\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst PopularCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Assets</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {/* <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard />\n                            </Grid> */}\n                            <Grid item xs={12}>\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Bajaj Finery\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.success.light,\n                                                                color: theme.palette.success.dark,\n                                                                ml: 2\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'success.dark' }}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider sx={{ my: 1.5 }} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $100.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.orange.light,\n                                                                color: theme.palette.orange.dark,\n                                                                marginLeft: 1.875\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider sx={{ my: 1.5 }} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Reliance\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $200.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.success.light,\n                                                                color: theme.palette.success.dark,\n                                                                ml: 2\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.success.dark }}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider sx={{ my: 1.5 }} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.orange.light,\n                                                                color: theme.palette.orange.dark,\n                                                                ml: 2\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider sx={{ my: 1.5 }} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Stolon\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar\n                                                            variant=\"rounded\"\n                                                            sx={{\n                                                                width: 16,\n                                                                height: 16,\n                                                                borderRadius: '5px',\n                                                                backgroundColor: theme.palette.orange.light,\n                                                                color: theme.palette.orange.dark,\n                                                                ml: 2\n                                                            }}\n                                                        >\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nPopularCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n        position: 'relative',\n        zIndex: 5\n    },\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.primary[800],\n        borderRadius: '50%',\n        zIndex: 1,\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        zIndex: 1,\n        width: 210,\n        height: 210,\n        background: theme.palette.primary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst TotalOrderLineChartCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [timeValue, setTimeValue] = useState(false);\n    const handleChangeTime = (event, newValue) => {\n        setTimeValue(newValue);\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.largeAvatar,\n                                                backgroundColor: theme.palette.primary[800],\n                                                color: '#fff',\n                                                mt: 1\n                                            }}\n                                        >\n                                            <LocalMallOutlinedIcon fontSize=\"inherit\" />\n                                        </Avatar>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            disableElevation\n                                            variant={timeValue ? 'contained' : 'text'}\n                                            size=\"small\"\n                                            sx={{ color: 'inherit' }}\n                                            onClick={(e) => handleChangeTime(e, true)}\n                                        >\n                                            Month\n                                        </Button>\n                                        <Button\n                                            disableElevation\n                                            variant={!timeValue ? 'contained' : 'text'}\n                                            size=\"small\"\n                                            sx={{ color: 'inherit' }}\n                                            onClick={(e) => handleChangeTime(e, false)}\n                                        >\n                                            Year\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ mb: 0.75 }}>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item>\n                                                {timeValue ? (\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                                        $108\n                                                    </Typography>\n                                                ) : (\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                                        $961\n                                                    </Typography>\n                                                )}\n                                            </Grid>\n                                            <Grid item>\n                                                <Avatar\n                                                    sx={{\n                                                        ...theme.typography.smallAvatar,\n                                                        cursor: 'pointer',\n                                                        backgroundColor: theme.palette.primary[200],\n                                                        color: theme.palette.primary.dark\n                                                    }}\n                                                >\n                                                    <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\n                                                </Avatar>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    sx={{\n                                                        fontSize: '1rem',\n                                                        fontWeight: 500,\n                                                        color: theme.palette.primary[200]\n                                                    }}\n                                                >\n                                                    Total Order\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalOrderLineChartCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalOrderLineChartCard;\n","// material-ui\nimport { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\n\n// ==============================|| SKELETON - TOTAL INCOME DARK/LIGHT CARD ||============================== //\n\nconst TotalIncomeCard = () => (\n    <Card sx={{ p: 2 }}>\n        <List sx={{ py: 0 }}>\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                <ListItemAvatar>\n                    <Skeleton variant=\"rectangular\" width={44} height={44} />\n                </ListItemAvatar>\n                <ListItemText\n                    sx={{ py: 0 }}\n                    primary={<Skeleton variant=\"rectangular\" height={20} />}\n                    secondary={<Skeleton variant=\"text\" />}\n                />\n            </ListItem>\n        </List>\n    </Card>\n);\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@mui/icons-material/TableChartOutlined';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\n\nconst TotalIncomeDarkCard = ({ isLoading, flagsCaptured }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.primary[800],\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        <TableChartOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={\n                                        <Typography variant=\"h4\" sx={{ color: '#fff' }}>\n                                            0\n                                        </Typography>\n                                    }\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\n                                            Flags Captured\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalIncomeDarkCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport StorefrontTwoToneIcon from '@mui/icons-material/StorefrontTwoTone';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\n\nconst TotalIncomeLightCard = ({ isLoading, funcBalance }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.warning.light,\n                                            color: theme.palette.warning.dark\n                                        }}\n                                    >\n                                        <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={<Typography variant=\"h4\">{funcBalance} XLM</Typography>}\n                                    secondary={\n                                        <Typography\n                                            variant=\"subtitle2\"\n                                            sx={{\n                                                color: theme.palette.grey[500],\n                                                mt: 0.5\n                                            }}\n                                        >\n                                            Smart Contract Balance\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalIncomeLightCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeLightCard;\n","import { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@mui/material';\n\n// project imports\nimport EarningCard from './EarningCard';\nimport PopularCard from './PopularCard';\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\nimport { gridSpacing } from 'store/constant';\n\nimport * as fsc from 'utils/freighter-stellar';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [assets, setAssets] = useState([]);\n    const [account, setAccount] = useState('');\n    const [funcBalance, setFuncBalance] = useState('');\n    const [xdrToken, setXDRToken] = useState('');\n    const [flagsCaptured, setFlagsCaptured] = useState('');\n    const turretPublicKey = 'GB4OYM7TQTJSROWXHOJLKAX2IJ2QN4I6S6GCJH4MGWVTAO5Q5DPNADXX';\n    const funcBaseUrl = 'https://stellar-turrets-testnet.sdf-ecosystem.workers.dev/';\n    const funcAddresses = ['9d64bd82134a1c141501dc16dca992446ecdc1812c1d75e8aab53443f879bf87'];\n    useEffect(() => {\n        const getData = async () => {\n            const pk = localStorage.getItem(\"userPublicKey\");\n            const xdrToken = localStorage.getItem(\"xdrToken\");\n            const assets = await fsc.getAssets(pk);\n            const funcBalance = await fsc.getFuncBalance(xdrToken, funcBaseUrl);\n            return { pk, assets, xdrToken, funcBalance };\n        };\n        getData()\n            .then((res) => {\n                if (res.pk) {\n                    console.log(res);\n                    setAccount(res.pk);\n                    setAssets(res.assets);\n                    setXDRToken(res.xdrToken);\n                    setFuncBalance(res.funcBalance);\n                }\n                setLoading(false);\n            })\n            .catch(console.error);\n        setLoading(false);\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                        <EarningCard isLoading={isLoading} />\n                    </Grid>\n                    {/* <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <TotalOrderLineChartCard isLoading={isLoading} />\n                    </Grid> */}\n                    <Grid item lg={6} md={12} sm={12} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeDarkCard isLoading={isLoading} flagsCaptured={flagsCaptured} />\n                            </Grid>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeLightCard isLoading={isLoading} funcBalance={funcBalance} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={6}>\n                        <PopularCard isLoading={isLoading} />\n                        {/* <TotalGrowthBarChart isLoading={isLoading} /> */}\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <PopularCard isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}