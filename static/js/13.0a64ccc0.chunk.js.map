{"version":3,"sources":["ui-component/cards/Skeleton/EarningCard.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/Asset.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/FlagHolder.js","views/dashboard/Default/FlagHoldersCard.js","views/dashboard/Default/TotalOrderLineChartCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","views/dashboard/Default/index.js"],"names":["EarningCard","Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","sx","my","CardWrapper","styled","MainCard","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","isLoading","useTheme","useState","anchorEl","setAnchorEl","handleClose","border","Box","p","Avatar","typography","commonAvatar","largeAvatar","mt","src","EarningIcon","alt","mediumAvatar","zIndex","onClick","event","currentTarget","fontSize","Menu","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","mr","alignItems","Typography","fontWeight","mb","PopularCard","spacing","gridSpacing","xs","zeroMinWidth","display","pt","Asset","ast","balance","assets","alignContent","primary","cursor","map","assetName","undefined","asset","Divider","CardActions","Button","size","disableElevation","FlagHolder","name","count","orange","light","marginLeft","FlagHoldersCard","TotalIncomeCard","List","py","ListItem","disableGutters","ListItemAvatar","ListItemText","TotalIncomeDarkCard","flagsCaptured","warning","TotalIncomeLightCard","funcBalance","grey","Dashboard","setLoading","setAssets","setAccount","setFuncBalance","setXDRToken","useEffect","getData","a","pk","localStorage","getItem","xdrToken","fsc","forEach","i","toString","then","res","catch","console","error","lg","md","sm"],"mappings":"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","file":"static/js/13.0a64ccc0.chunk.js","sourcesContent":["// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// ==============================|| SKELETON - EARNING CARD ||============================== //\n\nconst EarningCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Grid container justifyContent=\"space-between\">\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\n                </Grid>\n                <Grid item>\n                    <Skeleton variant=\"rectangular\" height={30} />\n                </Grid>\n            </Grid>\n        </CardContent>\n    </Card>\n);\n\nexport default EarningCard;\n","export default __webpack_public_path__ + \"static/media/earning.b019e86a.svg\";","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport EarningIcon from 'assets/images/icons/earning.svg';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst EarningCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.largeAvatar,\n                                                backgroundColor: theme.palette.secondary[800],\n                                                mt: 1\n                                            }}\n                                        >\n                                            <img src={EarningIcon} alt=\"Notification\" />\n                                        </Avatar>\n                                    </Grid>\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.mediumAvatar,\n                                                backgroundColor: theme.palette.secondary.dark,\n                                                color: theme.palette.secondary[200],\n                                                zIndex: 1\n                                            }}\n                                            aria-controls=\"menu-earning-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        >\n                                            <MoreHorizIcon fontSize=\"inherit\" />\n                                        </Avatar>\n                                        <Menu\n                                            id=\"menu-earning-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}>\n                                                <GetAppTwoToneIcon sx={{ mr: 1.75 }} /> Import Card\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <FileCopyTwoToneIcon sx={{ mr: 1.75 }} /> Copy Data\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <PictureAsPdfTwoToneIcon sx={{ mr: 1.75 }} /> Export\n                                            </MenuItem>\n                                            <MenuItem onClick={handleClose}>\n                                                <ArchiveTwoToneIcon sx={{ mr: 1.75 }} /> Archive File\n                                            </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item>\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                            10000 XLM\n                                        </Typography>\n                                    </Grid>\n                                    {/* <Grid item>\n                                        <Avatar\n                                            sx={{\n                                                cursor: 'pointer',\n                                                ...theme.typography.smallAvatar,\n                                                backgroundColor: theme.palette.secondary[200],\n                                                color: theme.palette.secondary.dark\n                                            }}\n                                        >\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\n                                        </Avatar>\n                                    </Grid> */}\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ mb: 1.25 }}>\n                                <Typography\n                                    sx={{\n                                        fontSize: '1rem',\n                                        fontWeight: 500,\n                                        color: theme.palette.secondary[200]\n                                    }}\n                                >\n                                    Reward Pool\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nEarningCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default EarningCard;\n","// material-ui\nimport { Card, CardContent, Grid } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\n// project imports\nimport { gridSpacing } from 'store/constant';\n\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\n\nconst PopularCard = () => (\n    <Card>\n        <CardContent>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                        <Grid item xs zeroMinWidth>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                        <Grid item>\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Skeleton variant=\"rectangular\" height={150} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                <Grid item xs={6}>\n                                    <Skeleton variant=\"rectangular\" height={20} />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                        <Grid item xs zeroMinWidth>\n                                            <Skeleton variant=\"rectangular\" height={20} />\n                                        </Grid>\n                                        <Grid item>\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Skeleton variant=\"rectangular\" height={20} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CardContent>\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\n        </CardContent>\n    </Card>\n);\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport React from \"react\";\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, Typography } from '@mui/material';\n\n// assets\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\n\nconst Asset = ({ast, balance}) => { \n    const theme = useTheme();\n\n    return(\n        <Grid container direction=\"column\">\n            <Grid item>\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                    <Grid item>\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                            {ast}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                    {balance}\n                                </Typography>\n                            </Grid>\n                            {/* <Grid item>\n                                <Avatar\n                                    variant=\"rounded\"\n                                    sx={{\n                                        width: 16,\n                                        height: 16,\n                                        borderRadius: '5px',\n                                        backgroundColor: theme.palette.orange.light,\n                                        color: theme.palette.orange.dark,\n                                        marginLeft: 1.875\n                                    }}\n                                >\n                                </Avatar>\n                            </Grid> */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n        // <Divider sx={{ my: 1.5 }} />\n    );\n}\n\nexport default Asset;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\n// import BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\nimport Asset from './Asset';\n\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\n// import KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\n// import KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst PopularCard = ({ isLoading, assets }) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const processItem = (ast) => {\n        var assetName;\n        if (ast.asset === undefined){\n            assetName = 'XLM'\n        }else{\n            assetName = ast.asset\n        }\n        return (\n            <span key={ast.id}>\n                <Asset ast={assetName} balance={ast.balance}/>\n                <Divider sx={{ my: 1.5 }} />\n            </span>\n        );\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Attributes</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            {/* <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem> */}\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {/* <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard />\n                            </Grid> */}\n                            <Grid item xs={12}>\n                                { assets ? assets.map(processItem) : <span key='0'><Asset ast='' balance=''/></span> }\n                                <span key='998'><Asset ast='ATK' balance='10'/><Divider sx={{ my: 1.5 }} /></span>\n                                <span key='999'><Asset ast='DEF' balance='9'/><Divider sx={{ my: 1.5 }} /></span>\n                                <span key='999'><Asset ast='XTRA' balance='9'/><Divider sx={{ my: 1.5 }} /></span>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nPopularCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport React from \"react\";\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Grid, Typography } from '@mui/material';\n\n// assets\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\n\nconst FlagHolder = ({name, count}) => { \n    const theme = useTheme();\n\n    return(\n        <Grid container direction=\"column\">\n            <Grid item>\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                    <Grid item>\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                            {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                    {count}\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    variant=\"rounded\"\n                                    sx={{\n                                        width: 16,\n                                        height: 16,\n                                        borderRadius: '5px',\n                                        backgroundColor: theme.palette.orange.light,\n                                        color: theme.palette.orange.dark,\n                                        marginLeft: 1.875\n                                    }}\n                                >\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n        // <Divider sx={{ my: 1.5 }} />\n    );\n}\n\nexport default FlagHolder;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\n// import BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\nimport FlagHolder from './FlagHolder';\n\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\n// import KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\n// import KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst FlagHoldersCard = ({ isLoading, assets }) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const processItem = (act) => {\n        return (\n            <span key={ast.id}>\n                <FlagHolder name={act.name} balance={act.balance}/>\n                <Divider sx={{ my: 1.5 }} />\n            </span>\n        );\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Flag Holders</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            {/* <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem> */}\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {/* <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard />\n                            </Grid> */}\n                            <Grid item xs={12}>\n                                <span key='0'>\n                                    <FlagHolder name='GXASLKDFJASLKDJFHDSS' count='25'/>\n                                    <Divider sx={{ my: 1.5 }} />\n                                </span>\n                                <span key='1'>\n                                    <FlagHolder name='GXASLKDFJASLKJFIUSOI' count='10'/>\n                                    <Divider sx={{ my: 1.5 }} />\n                                </span>\n                                <span key='2'>\n                                    <FlagHolder name='GXASLKDFJASUIOINONNN' count='5'/>\n                                    <Divider sx={{ my: 1.5 }} />\n                                </span>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nFlagHoldersCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default FlagHoldersCard;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n        position: 'relative',\n        zIndex: 5\n    },\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.primary[800],\n        borderRadius: '50%',\n        zIndex: 1,\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        zIndex: 1,\n        width: 210,\n        height: 210,\n        background: theme.palette.primary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst TotalOrderLineChartCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [timeValue, setTimeValue] = useState(false);\n    const handleChangeTime = (event, newValue) => {\n        setTimeValue(newValue);\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Avatar\n                                            variant=\"rounded\"\n                                            sx={{\n                                                ...theme.typography.commonAvatar,\n                                                ...theme.typography.largeAvatar,\n                                                backgroundColor: theme.palette.primary[800],\n                                                color: '#fff',\n                                                mt: 1\n                                            }}\n                                        >\n                                            <LocalMallOutlinedIcon fontSize=\"inherit\" />\n                                        </Avatar>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            disableElevation\n                                            variant={timeValue ? 'contained' : 'text'}\n                                            size=\"small\"\n                                            sx={{ color: 'inherit' }}\n                                            onClick={(e) => handleChangeTime(e, true)}\n                                        >\n                                            Month\n                                        </Button>\n                                        <Button\n                                            disableElevation\n                                            variant={!timeValue ? 'contained' : 'text'}\n                                            size=\"small\"\n                                            sx={{ color: 'inherit' }}\n                                            onClick={(e) => handleChangeTime(e, false)}\n                                        >\n                                            Year\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ mb: 0.75 }}>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item>\n                                                {timeValue ? (\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                                        $108\n                                                    </Typography>\n                                                ) : (\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\n                                                        $961\n                                                    </Typography>\n                                                )}\n                                            </Grid>\n                                            <Grid item>\n                                                <Avatar\n                                                    sx={{\n                                                        ...theme.typography.smallAvatar,\n                                                        cursor: 'pointer',\n                                                        backgroundColor: theme.palette.primary[200],\n                                                        color: theme.palette.primary.dark\n                                                    }}\n                                                >\n                                                    <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\n                                                </Avatar>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    sx={{\n                                                        fontSize: '1rem',\n                                                        fontWeight: 500,\n                                                        color: theme.palette.primary[200]\n                                                    }}\n                                                >\n                                                    Total Order\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalOrderLineChartCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalOrderLineChartCard;\n","// material-ui\nimport { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\n\n// ==============================|| SKELETON - TOTAL INCOME DARK/LIGHT CARD ||============================== //\n\nconst TotalIncomeCard = () => (\n    <Card sx={{ p: 2 }}>\n        <List sx={{ py: 0 }}>\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                <ListItemAvatar>\n                    <Skeleton variant=\"rectangular\" width={44} height={44} />\n                </ListItemAvatar>\n                <ListItemText\n                    sx={{ py: 0 }}\n                    primary={<Skeleton variant=\"rectangular\" height={20} />}\n                    secondary={<Skeleton variant=\"text\" />}\n                />\n            </ListItem>\n        </List>\n    </Card>\n);\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@mui/icons-material/TableChartOutlined';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\n\nconst TotalIncomeDarkCard = ({ isLoading, flagsCaptured }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.primary[800],\n                                            color: '#fff'\n                                        }}\n                                    >\n                                        <TableChartOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={\n                                        <Typography variant=\"h4\" sx={{ color: '#fff' }}>\n                                            0\n                                        </Typography>\n                                    }\n                                    secondary={\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\n                                            Flags Captured\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalIncomeDarkCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport StorefrontTwoToneIcon from '@mui/icons-material/StorefrontTwoTone';\n\n// styles\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\n        borderRadius: '50%',\n        top: -30,\n        right: -180\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\n        borderRadius: '50%',\n        top: -160,\n        right: -130\n    }\n}));\n\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\n\nconst TotalIncomeLightCard = ({ isLoading, funcBalance }) => {\n    const theme = useTheme();\n\n    return (\n        <>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2 }}>\n                        <List sx={{ py: 0 }}>\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{\n                                            ...theme.typography.commonAvatar,\n                                            ...theme.typography.largeAvatar,\n                                            backgroundColor: theme.palette.warning.light,\n                                            color: theme.palette.warning.dark\n                                        }}\n                                    >\n                                        <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    sx={{\n                                        py: 0,\n                                        mt: 0.45,\n                                        mb: 0.45\n                                    }}\n                                    primary={<Typography variant=\"h4\">{funcBalance} XLM</Typography>}\n                                    secondary={\n                                        <Typography\n                                            variant=\"subtitle2\"\n                                            sx={{\n                                                color: theme.palette.grey[500],\n                                                mt: 0.5\n                                            }}\n                                        >\n                                            Smart Contract Balance\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        </List>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTotalIncomeLightCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeLightCard;\n","import { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@mui/material';\n\n// project imports\nimport EarningCard from './EarningCard';\nimport PopularCard from './PopularCard';\nimport FlagHoldersCard from './FlagHoldersCard';\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\nimport { gridSpacing } from 'store/constant';\n\nimport * as fsc from 'utils/freighter-stellar';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [assets, setAssets] = useState([]);\n    const [account, setAccount] = useState('');\n    const [funcBalance, setFuncBalance] = useState('');\n    const [xdrToken, setXDRToken] = useState('');\n    const [flagsCaptured, setFlagsCaptured] = useState('');\n    const turretPublicKey = 'GB4OYM7TQTJSROWXHOJLKAX2IJ2QN4I6S6GCJH4MGWVTAO5Q5DPNADXX';\n    const funcBaseUrl = 'https://stellar-turrets-testnet.sdf-ecosystem.workers.dev/';\n    const funcAddresses = ['9d64bd82134a1c141501dc16dca992446ecdc1812c1d75e8aab53443f879bf87'];\n    useEffect(() => {\n        const getData = async () => {\n            const pk = localStorage.getItem(\"userPublicKey\");\n            const xdrToken = localStorage.getItem(\"xdrToken\");\n            var assets, funcBalance;\n            if (pk && xdrToken) {\n                assets = await fsc.getAssets(pk);\n                funcBalance = await fsc.getFuncBalance(xdrToken, funcBaseUrl);\n            }\n            else {\n                assets = [];\n                funcBalance = '';\n            }\n            assets.forEach((item, i) => {\n                item.id = (i + 1).toString();\n            });\n\n            return { pk, assets, xdrToken, funcBalance };\n        };\n        getData()\n            .then((res) => {\n                if (res.pk) {\n                    setAccount(res.pk);\n                    setAssets(res.assets);\n                    setXDRToken(res.xdrToken);\n                    setFuncBalance(res.funcBalance);\n                }\n                setLoading(false);\n            })\n            .catch(console.error);\n        setLoading(false);\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                        <EarningCard isLoading={isLoading} />\n                    </Grid>\n                    {/* <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <TotalOrderLineChartCard isLoading={isLoading} />\n                    </Grid> */}\n                    <Grid item lg={6} md={12} sm={12} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeDarkCard isLoading={isLoading} flagsCaptured={flagsCaptured} />\n                            </Grid>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeLightCard isLoading={isLoading} funcBalance={funcBalance} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={6}>\n                        <PopularCard isLoading={isLoading} assets={assets}/>\n                        {/* <TotalGrowthBarChart isLoading={isLoading} /> */}\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <FlagHoldersCard isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}