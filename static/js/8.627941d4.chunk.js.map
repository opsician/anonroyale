{"version":3,"sources":["utils/freighter-stellar.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","assets/images/icons/social-google.svg","ui-component/cards/AuthFooter.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login3.js"],"names":["retrievePublicKey","a","publicKey","error","freighterApi","getPublicKey","console","retrieveNetwork","network","getNetwork","userSignTransaction","xdr","signedTransaction","signTransaction","generateXDRToken","txFunctionHashes","log","tempAcct","StellarSdk","Account","testnet","Server","fetchBaseFee","fee","txBuilder","TransactionBuilder","networkPassphrase","Networks","TESTNET","hash","addOperation","Operation","manageData","name","value","tx","setTimeout","build","txHashed","toEnvelope","toXDR","txSigned","alert","getAssets","userPublicKey","server","loadAccount","account","balances","map","balance","asset","asset_code","type","asset_type","getFuncBalance","xdrToken","turretURL","headers","axios","get","response","data","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","FirebaseLogin","others","useTheme","scriptedRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","useState","checked","setChecked","navigate","useNavigate","freighterHandler","funcAddresses","fsc","pk","window","localStorage","setItem","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Grid","container","spacing","item","AnimateButton","Button","disableElevation","fullWidth","onClick","size","color","grey","borderColor","Box","mr","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Stack","FormControlLabel","control","Checkbox","textDecoration","mt","Login","to","Logo","secondary","main","gutterBottom","fontSize","textAlign","AuthLogin"],"mappings":"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","file":"static/js/8.627941d4.chunk.js","sourcesContent":["import freighterApi from '@stellar/freighter-api';\nimport StellarSdk from 'stellar-sdk';\nimport StellarBase from 'stellar-base';\nimport axios from 'axios';\n\nconst checkFreighter = async () => {\n    if (freighterApi.isConnected()) {\n        return true;\n    }\n    return false;\n};\n\nconst retrievePublicKey = async () => {\n    let publicKey = '';\n    let error = '';\n    try {\n        publicKey = await freighterApi.getPublicKey();\n    } catch (e) {\n        error = e;\n    }\n    if (error) {\n        console.error(error);\n        return false;\n    }\n    return publicKey;\n};\n\nconst retrieveNetwork = async () => {\n    let network = '';\n    let error = '';\n    try {\n        network = await freighterApi.getNetwork();\n    } catch (e) {\n        error = e;\n    }\n    if (error) {\n        console.error(error);\n        return false;\n    }\n    if (network !== 'TESTNET') {\n        return false;\n    }\n    return true;\n};\n\nconst checkBasicReq = async () => {\n    const userPublicKey = await retrievePublicKey();\n    const network = await retrieveNetwork();\n    const wallet = await checkFreighter();\n\n    return userPublicKey && network && wallet;\n};\n\nconst userSignTransaction = async (xdr, network) => {\n    let signedTransaction = '';\n    let error = '';\n    try {\n        signedTransaction = await freighterApi.signTransaction(xdr, network);\n    } catch (e) {\n        error = e;\n    }\n\n    if (error) {\n        return error;\n    }\n    return signedTransaction;\n};\n\nconst payment = async (paymentAmt, dest, publicKey) => {\n    const server = new StellarSdk.Server('https://horizon-testnet.stellar.org');\n    const paymentToDest = {\n        destination: dest,\n        asset: StellarSdk.Asset.native(),\n        amount: paymentAmt\n    };\n    const txOptions = {\n        fee: await server.fetchBaseFee(),\n        networkPassphrase: 'Test SDF Network ; September 2015'\n    };\n    const accountA = await server.loadAccount(publicKey);\n    const transaction = new StellarSdk.TransactionBuilder(accountA, txOptions)\n        .addOperation(StellarSdk.Operation.payment(paymentToDest))\n        .setTimeout(StellarBase.TimeoutInfinite)\n        .build();\n    const transactionString = transaction.toEnvelope().toXDR('base64');\n    const xdrPay = await userSignTransaction(transactionString, 'TESTNET');\n    return xdrPay;\n};\n\nconst topUp = async (xdrPay, turretBaseUrl, publicKey) => {\n    const body = {\n        txFunctionFee: xdrPay\n    };\n    const reqUrl = `${turretBaseUrl}tx-fees/${publicKey}`;\n    const res = await axios.post(reqUrl, body);\n    return res.data;\n};\n\nconst generateXDRToken = async (txFunctionHashes, publicKey) => {\n    console.log('Generating XDR Token...');\n    var txSigned = '';\n    try {\n        // setup a fake account with a -1 seq number.\n        // This ensures a zero seq number when the transaction is built (TransactionBuilder increments once).\n        const tempAcct = new StellarSdk.Account(publicKey, '-1');\n        const testnet = new StellarSdk.Server('https://horizon-testnet.stellar.org')\n        const fee = await testnet.fetchBaseFee();\n        const txBuilder = new StellarSdk.TransactionBuilder(tempAcct, {fee, networkPassphrase: StellarSdk.Networks.TESTNET});\n        // add the manage data operations to specify the allowed txHashes to be run for this user\n        for (const hash of txFunctionHashes) {\n            txBuilder.addOperation(StellarSdk.Operation.manageData({\n                name: \"txFunctionHash\",\n                value: hash\n            }));\n        }\n        // set TTL on the token for 1 hour\n        const tx = txBuilder.setTimeout(24*60*60).build();\n        // sign transaction\n        const txHashed = tx.toEnvelope().toXDR('base64')\n        const txSigned = await userSignTransaction(txHashed, 'TESTNET');\n        return txSigned;\n    } catch (e) {\n        alert(e);\n    }\n    return false;\n};\n\nconst runFunc = async(\n    publicKey, \n    xdrToken, \n    turretURL,\n    funcHash\n    ) => {\n        console.log('Running function...')\n        const body = {\n            source: publicKey\n        }\n        const headers = {\n            \"Authorization\": \"Bearer \" + xdrToken\n        }\n        const response = await axios.post(turretURL + 'tx-functions/' + funcHash, body, {headers: headers})\n        return response.data\n};\n\nconst turretSign = async(xdr, signer, signature) => {\n    console.log('Adding turret signature to transaction...')\n    const transaction = new StellarSdk.Transaction(xdr, StellarSdk.Networks.TESTNET)\n    transaction.addSignature(signer, signature)\n    return transaction.toXDR()\n};\n\nconst sendTransaction = async(signedTxn) => {\n    console.log('Sending transaction...')\n    const serverUrl = \"https://horizon-testnet.stellar.org\"\n    const server = new StellarSdk.Server(serverUrl)\n    var txn = new StellarSdk.Transaction(signedTxn, StellarSdk.Networks.TESTNET)\n    const txnString = txn.toEnvelope().toXDR('base64')\n    const txnSignedComplete = await userSignTransaction(txnString, \"TESTNET\")\n    const txnToSubmit = StellarSdk.TransactionBuilder.fromXDR(\n        txnSignedComplete,\n        serverUrl\n    );\n    const response = await server.submitTransaction(txnToSubmit);\n    return response\n};\n\nconst getAssets = async (userPublicKey) => {\n    const server = new StellarSdk.Server('https://horizon-testnet.stellar.org')\n    const account = await server.loadAccount(userPublicKey);\n    const balances = account.balances.map( balance => ({\n        asset: balance.asset_code,\n        type: balance.asset_type,\n        balance: balance.balance\n    }))\n\n    return balances\n}\n\nconst getFuncBalance = async (\n    xdrToken, \n    turretURL\n    ) => {\n        const headers = {\n            \"Authorization\": \"Bearer \" + xdrToken\n        }\n        const response = await axios.get(turretURL + 'tx-fees/', {headers: headers})\n        return response.data.balance\n}\n\nexport { \n    checkFreighter,\n    retrievePublicKey,\n    retrieveNetwork,\n    checkBasicReq,\n    userSignTransaction,\n    payment,\n    topUp,\n    generateXDRToken,\n    runFunc,\n    turretSign,\n    sendTransaction,\n    getAssets,\n    getFuncBalance\n};\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport Google from 'assets/images/icons/social-google.svg';\n\nimport * as fsc from 'utils/freighter-stellar';\n\n// ============================|| FIREBASE - LOGIN ||============================ //\n\nconst FirebaseLogin = ({ ...others }) => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const [checked, setChecked] = useState(true);\n    const navigate = useNavigate();\n\n    const freighterHandler = async () => {\n        const funcAddresses = ['9d64bd82134a1c141501dc16dca992446ecdc1812c1d75e8aab53443f879bf87'];\n        const network = await fsc.retrieveNetwork();\n        const pk = await fsc.retrievePublicKey();\n        const xdrToken = await fsc.generateXDRToken(funcAddresses, pk);\n        if (pk && network) {\n            window.localStorage.setItem(\"userPublicKey\", pk);\n            if (xdrToken) {\n                window.localStorage.setItem(\"xdrToken\", xdrToken);\n            }\n            navigate(\"/token-royale\");\n        }\n    };\n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth\n                            onClick={freighterHandler}\n                            size=\"large\"\n                            variant=\"outlined\"\n                            sx={{\n                                color: 'grey.700',\n                                backgroundColor: theme.palette.grey[50],\n                                borderColor: theme.palette.grey[100]\n                            }}\n                        >\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\n                            </Box>\n                            Sign in with Freighter\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n\n                        <Button\n                            variant=\"outlined\"\n                            sx={{\n                                cursor: 'unset',\n                                m: 2,\n                                py: 0.5,\n                                px: 7,\n                                borderColor: `${theme.palette.grey[100]} !important`,\n                                color: `${theme.palette.grey[900]}!important`,\n                                fontWeight: 500,\n                                borderRadius: `${customization.borderRadius}px`\n                            }}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign in\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default FirebaseLogin;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthLogin from '../auth-forms/AuthLogin';\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\n// assets\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthLogin />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/pages/register/register3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don&apos;t have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}